import GameServer.Commands

namespace Predicate

World "Predicate"
Level 5
Title "Nested Quantifiers"

Introduction "
Youâ€™ve worked with `âˆ€` and `âˆƒ` individually. Now letâ€™s **combine** them.

Suppose weâ€™re told:
> \"For every `x`, there exists a `y` such that `P(x, y)` holds.\"

Thatâ€™s written as:
```lean
âˆ€ x, âˆƒ y, P(x, y)
```
In Lean, you can treat universal quantifiers (`âˆ€`) like functions.

So:

```lean
h : âˆ€ x, âˆƒ y, P(x, y)
a : Î±
```

Then we get to
```lean
h a : âˆƒ y, P(a, y)
```

Let's try to break this down!
"

Statement {Î± : Type} (P : Î± â†’ Î± â†’ Prop) (a : Î±) (h : âˆ€ x, âˆƒ y, P x y) : âˆƒ y, P a y := by
Hint "You want to prove `âˆƒ y, P a y`, and you have a general rule: `âˆ€ x, âˆƒ y, P x y`.

`apply h` to `a` to get: `âˆƒ y, P a y`."
apply h a

Conclusion "
Awesome! ðŸŽ‰

You just worked with a nested quantifier:

`h : âˆ€ x, âˆƒ y, P(x, y)` means every `x` has its own matching `y`

By applying it to a specific `a`, you got `âˆƒ y, P(a, y)`.

This pattern â€” universal followed by existential â€” is very common in mathematical reasoning.
"

end Predicate
